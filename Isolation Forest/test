import numpy as np
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest

# Generate simulated sensor data
np.random.seed(42)
n_samples = 1000
time = np.arange(n_samples)

# Simulated normal data
heart_rate = 75 + 5 * np.sin(2 * np.pi * time / 100) + np.random.normal(0, 2, n_samples)
motion = 0.3 + 0.1 * np.sin(2 * np.pi * time / 50) + np.random.normal(0, 0.02, n_samples)

# Introduce anomalies
anomaly_indices = [200, 500, 800]
heart_rate[anomaly_indices] += np.random.uniform(20, 30, len(anomaly_indices))
motion[anomaly_indices] += np.random.uniform(0.5, 1.0, len(anomaly_indices))

# Combine features (heart rate and motion)
X = np.column_stack((heart_rate, motion))

# Apply Isolation Forest
clf = IsolationForest(contamination=0.02, random_state=42)
y_pred = clf.fit_predict(X)  # -1 = anomaly, 1 = normal

# Plot results
plt.figure(figsize=(12, 6))

plt.subplot(211)
plt.plot(time, heart_rate, label="Heart Rate (bpm)")
plt.scatter(time[y_pred == -1], heart_rate[y_pred == -1], color='red', label="Anomaly")
plt.legend()
plt.title("Heart Rate with Detected Anomalies")

plt.subplot(212)
plt.plot(time, motion, label="Motion")
plt.scatter(time[y_pred == -1], motion[y_pred == -1], color='red', label="Anomaly")
plt.legend()
plt.title("Motion with Detected Anomalies")

plt.tight_layout()
plt.show()

print(f"Number of detected anomalies: {sum(y_pred == -1)}")
